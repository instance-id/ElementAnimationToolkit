{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Element Animation Toolkit",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/instance.id.EATK.AnimatedItems.html": {
    "href": "api/instance.id.EATK.AnimatedItems.html",
    "title": "Class AnimatedItems | Element Animation Toolkit",
    "keywords": "Class AnimatedItems Inheritance Object AnimatedItems AnimatedItems<TEventType> AnimatedItems<TEventType, T2EventType> Namespace : instance.id.EATK Assembly : cs.temp.dll.dll Syntax public class AnimatedItems Constructors AnimatedItems(VisualElement) Declaration public AnimatedItems(VisualElement ele) Parameters Type Name Description VisualElement ele Properties AllowRun Declaration public bool AllowRun { get; set; } Property Value Type Description Boolean AnimatedItemArray Declaration public ValueAnimation<StyleValues>[] AnimatedItemArray { get; set; } Property Value Type Description ValueAnimation < StyleValues >[] AnimatedItemList Declaration public List<ValueAnimation<StyleValues>> AnimatedItemList { get; set; } Property Value Type Description List < ValueAnimation < StyleValues >> Element Declaration public VisualElement Element { get; set; } Property Value Type Description VisualElement ElementName Declaration public string ElementName { get; set; } Property Value Type Description String Methods CopyToArray() Declaration public void CopyToArray()"
  },
  "api/instance.id.EATK.AnimatedItems-1.html": {
    "href": "api/instance.id.EATK.AnimatedItems-1.html",
    "title": "Class AnimatedItems<TEventType> | Element Animation Toolkit",
    "keywords": "Class AnimatedItems<TEventType> Inheritance Object AnimatedItems AnimatedItems<TEventType> Inherited Members AnimatedItems.CopyToArray() AnimatedItems.ElementName AnimatedItems.Element AnimatedItems.AnimatedItemList AnimatedItems.AnimatedItemArray AnimatedItems.AllowRun Namespace : instance.id.EATK Assembly : cs.temp.dll.dll Syntax public class AnimatedItems<TEventType> : AnimatedItems Type Parameters Name Description TEventType Constructors AnimatedItems(VisualElement) Declaration public AnimatedItems(VisualElement ele) Parameters Type Name Description VisualElement ele Properties EventCallback Declaration public EventCallback<TEventType> EventCallback { get; set; } Property Value Type Description EventCallback <TEventType> EventCallbacks Declaration public List<EventCallback<TEventType>> EventCallbacks { get; set; } Property Value Type Description List < EventCallback <TEventType>>"
  },
  "api/instance.id.EATK.AnimatedItems-2.html": {
    "href": "api/instance.id.EATK.AnimatedItems-2.html",
    "title": "Class AnimatedItems<TEventType, T2EventType> | Element Animation Toolkit",
    "keywords": "Class AnimatedItems<TEventType, T2EventType> Inheritance Object AnimatedItems AnimatedItems<TEventType, T2EventType> Inherited Members AnimatedItems.CopyToArray() AnimatedItems.ElementName AnimatedItems.Element AnimatedItems.AnimatedItemList AnimatedItems.AnimatedItemArray AnimatedItems.AllowRun Namespace : instance.id.EATK Assembly : cs.temp.dll.dll Syntax public class AnimatedItems<TEventType, T2EventType> : AnimatedItems Type Parameters Name Description TEventType T2EventType Constructors AnimatedItems(VisualElement) Declaration public AnimatedItems(VisualElement ele) Parameters Type Name Description VisualElement ele Properties EventCallbacks Declaration public (EventCallback<TEventType> mouseOverEvent, EventCallback<T2EventType> mouseOutEvent) EventCallbacks { get; set; } Property Value Type Description (T1, T2) < EventCallback <TEventType>, EventCallback <T2EventType>>"
  },
  "api/instance.id.EATK.CollectionExtension.html": {
    "href": "api/instance.id.EATK.CollectionExtension.html",
    "title": "Class CollectionExtension | Element Animation Toolkit",
    "keywords": "Class CollectionExtension Inheritance Object CollectionExtension Namespace : instance.id.EATK Assembly : cs.temp.dll.dll Syntax public static class CollectionExtension Methods ForEach<T>(IEnumerable<T>, Action<T, Int32>) Declaration public static void ForEach<T>(this IEnumerable<T> ie, Action<T, int> action) Parameters Type Name Description IEnumerable <T> ie Action <T, Int32 > action Type Parameters Name Description T ForEach<T>(IEnumerable<T>, Action<T>) Declaration public static void ForEach<T>(this IEnumerable<T> ie, Action<T> action) Parameters Type Name Description IEnumerable <T> ie Action <T> action Type Parameters Name Description T ForEachR<T>(List<T>, Action<T>, Boolean) Reverse ForEach. Same as the usual one, just.. the other way. Declaration public static IEnumerable<T> ForEachR<T>(this List<T> source, Action<T> action, bool reverse = false) Parameters Type Name Description List <T> source Action <T> action Boolean reverse Returns Type Description IEnumerable <T> Type Parameters Name Description T GetIntWidth<TValue>(List<TValue>) Iterate the list values and return the length of the longest entry Declaration public static int GetIntWidth<TValue>(this List<TValue> list) Parameters Type Name Description List <TValue> list The collection to iterate Returns Type Description Int32 The int value of the longest length entry Type Parameters Name Description TValue GetKeyWidth<TKey, TValue>(Dictionary<TKey, TValue>, IEnumerable<TKey>) Iterate the keys and return the length of the longest entry Declaration public static int GetKeyWidth<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, IEnumerable<TKey> keys) Parameters Type Name Description Dictionary <TKey, TValue> dictionary The collection to iterate IEnumerable <TKey> keys The items in which to find the desired longest entry Returns Type Description Int32 The int value of the longest length entry Type Parameters Name Description TKey TValue GetOrAdd<T, TKey>(Dictionary<TKey, T>, TKey, Func<TKey, T>) Declaration public static T GetOrAdd<T, TKey>(this Dictionary<TKey, T> dictionary, TKey key, Func<TKey, T> func) Parameters Type Name Description Dictionary <TKey, T> dictionary TKey key Func <TKey, T> func Returns Type Description T Type Parameters Name Description T TKey TryAddRange<TKey, TValue>(Dictionary<TKey, TValue>, IEnumerable<TKey>, TValue) Declaration public static void TryAddRange<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, IEnumerable<TKey> keys, TValue value) Parameters Type Name Description Dictionary <TKey, TValue> dictionary IEnumerable <TKey> keys TValue value Type Parameters Name Description TKey TValue TryAddValue<TValue>(List<TValue>, TValue) Declaration public static bool TryAddValue<TValue>(this List<TValue> list, TValue value) Parameters Type Name Description List <TValue> list TValue value Returns Type Description Boolean Type Parameters Name Description TValue TryAddValue<TKey, TValue>(Dictionary<TKey, TValue>, TKey, TValue) Declaration public static bool TryAddValue<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, TKey key, TValue value) Parameters Type Name Description Dictionary <TKey, TValue> dictionary TKey key TValue value Returns Type Description Boolean Type Parameters Name Description TKey TValue TryAddValue<TKey, TValue>(IDictionary<TKey, TValue>, TKey, TValue) Declaration public static bool TryAddValue<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key, TValue value) Parameters Type Name Description IDictionary <TKey, TValue> dictionary TKey key TValue value Returns Type Description Boolean Type Parameters Name Description TKey TValue TryGetVal<Tkey, Tvalue>(Dictionary<Tkey, Tvalue>, Tkey) Declaration public static Tvalue TryGetVal<Tkey, Tvalue>(this Dictionary<Tkey, Tvalue> dict, Tkey key) Parameters Type Name Description Dictionary <Tkey, Tvalue> dict Tkey key Returns Type Description Tvalue Type Parameters Name Description Tkey Tvalue TryGetValue<TValue>(List<TValue>, String) Declaration public static TValue TryGetValue<TValue>(this List<TValue> list, string value) where TValue : UnityEngine.Object Parameters Type Name Description List <TValue> list String value Returns Type Description TValue Type Parameters Name Description TValue TryRemove<TKey, TValue>(Dictionary<TKey, TValue>, TKey, out Exception) Declaration public static bool TryRemove<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, TKey key, out Exception any) Parameters Type Name Description Dictionary <TKey, TValue> dictionary TKey key Exception any Returns Type Description Boolean Type Parameters Name Description TKey TValue TryRemove<TKey, TValue>(Dictionary<TKey, TValue>, ref TKey) Declaration public static bool TryRemove<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, ref TKey key) Parameters Type Name Description Dictionary <TKey, TValue> dictionary TKey key Returns Type Description Boolean Type Parameters Name Description TKey TValue TryRemove<TKey, TValue>(Dictionary<TKey, TValue>, ref TKey, out TValue, out Exception) Declaration public static bool TryRemove<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, ref TKey key, out TValue value, out Exception any) Parameters Type Name Description Dictionary <TKey, TValue> dictionary TKey key TValue value Exception any Returns Type Description Boolean Type Parameters Name Description TKey TValue TryRemove<TKey, TValue>(Dictionary<TKey, TValue>, ref TKey, out Exception) Declaration public static bool TryRemove<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, ref TKey key, out Exception any) Parameters Type Name Description Dictionary <TKey, TValue> dictionary TKey key Exception any Returns Type Description Boolean Type Parameters Name Description TKey TValue"
  },
  "api/instance.id.EATK.Easy.html": {
    "href": "api/instance.id.EATK.Easy.html",
    "title": "Class Easy | Element Animation Toolkit",
    "keywords": "Class Easy A collection of easing curves to be used with ValueAnimations. Inheritance Object Easy Namespace : instance.id.EATK Assembly : cs.temp.dll.dll Syntax public static class Easy Methods EaseInOutQuint(Single) Declaration public static float EaseInOutQuint(float t) Parameters Type Name Description Single t Returns Type Description Single InBack(Single) Declaration public static float InBack(float t) Parameters Type Name Description Single t Returns Type Description Single InBack(Single, Single) Declaration public static float InBack(float t, float s) Parameters Type Name Description Single t Single s Returns Type Description Single InBounce(Single) Declaration public static float InBounce(float t) Parameters Type Name Description Single t Returns Type Description Single InCirc(Single) Declaration public static float InCirc(float t) Parameters Type Name Description Single t Returns Type Description Single InCubic(Single) Declaration public static float InCubic(float t) Parameters Type Name Description Single t Returns Type Description Single InElastic(Single) Declaration public static float InElastic(float t) Parameters Type Name Description Single t Returns Type Description Single InOutBack(Single) Declaration public static float InOutBack(float t) Parameters Type Name Description Single t Returns Type Description Single InOutBack(Single, Single) Declaration public static float InOutBack(float t, float s) Parameters Type Name Description Single t Single s Returns Type Description Single InOutBounce(Single) Declaration public static float InOutBounce(float t) Parameters Type Name Description Single t Returns Type Description Single InOutCirc(Single) Declaration public static float InOutCirc(float t) Parameters Type Name Description Single t Returns Type Description Single InOutCubic(Single) Declaration public static float InOutCubic(float t) Parameters Type Name Description Single t Returns Type Description Single InOutElastic(Single) Declaration public static float InOutElastic(float t) Parameters Type Name Description Single t Returns Type Description Single InOutPower(Single, Int32) Declaration public static float InOutPower(float t, int power) Parameters Type Name Description Single t Int32 power Returns Type Description Single InOutQuad(Single) Declaration public static float InOutQuad(float t) Parameters Type Name Description Single t Returns Type Description Single InOutSine(Single) Declaration public static float InOutSine(float t) Parameters Type Name Description Single t Returns Type Description Single InPower(Single, Int32) Declaration public static float InPower(float t, int power) Parameters Type Name Description Single t Int32 power Returns Type Description Single InQuad(Single) Declaration public static float InQuad(float t) Parameters Type Name Description Single t Returns Type Description Single InSine(Single) Declaration public static float InSine(float t) Parameters Type Name Description Single t Returns Type Description Single Linear(Single) Declaration public static float Linear(float t) Parameters Type Name Description Single t Returns Type Description Single OutBack(Single) Declaration public static float OutBack(float t) Parameters Type Name Description Single t Returns Type Description Single OutBack(Single, Single) Declaration public static float OutBack(float t, float s) Parameters Type Name Description Single t Single s Returns Type Description Single OutBounce(Single) Declaration public static float OutBounce(float t) Parameters Type Name Description Single t Returns Type Description Single OutCirc(Single) Declaration public static float OutCirc(float t) Parameters Type Name Description Single t Returns Type Description Single OutCubic(Single) Declaration public static float OutCubic(float t) Parameters Type Name Description Single t Returns Type Description Single OutElastic(Single) Declaration public static float OutElastic(float t) Parameters Type Name Description Single t Returns Type Description Single OutExpo(Single) Declaration public static float OutExpo(float t) Parameters Type Name Description Single t Returns Type Description Single OutPower(Single, Int32) Declaration public static float OutPower(float t, int power) Parameters Type Name Description Single t Int32 power Returns Type Description Single OutQuad(Single) Declaration public static float OutQuad(float t) Parameters Type Name Description Single t Returns Type Description Single OutSine(Single) Declaration public static float OutSine(float t) Parameters Type Name Description Single t Returns Type Description Single Step(Single) Declaration public static float Step(float t) Parameters Type Name Description Single t Returns Type Description Single"
  },
  "api/instance.id.EATK.Examples.Axe.html": {
    "href": "api/instance.id.EATK.Examples.Axe.html",
    "title": "Class Axe | Element Animation Toolkit",
    "keywords": "Class Axe Inheritance Object WeaponBase Axe Namespace : instance.id.EATK.Examples Assembly : cs.temp.dll.dll Syntax public class Axe : WeaponBase Fields Damage Declaration public int Damage Field Value Type Description Int32 Durability Declaration public int Durability Field Value Type Description Int32 icon Declaration public Texture2D icon Field Value Type Description Texture2D Weight Declaration public int Weight Field Value Type Description Int32"
  },
  "api/instance.id.EATK.Examples.ExampleComponent.html": {
    "href": "api/instance.id.EATK.Examples.ExampleComponent.html",
    "title": "Class ExampleComponent | Element Animation Toolkit",
    "keywords": "Class ExampleComponent Inheritance Object ExampleComponent Namespace : instance.id.EATK.Examples Assembly : cs.temp.dll.dll Syntax [Serializable] public class ExampleComponent : MonoBehaviour Fields availableWeapons Declaration public List<WeaponBase> availableWeapons Field Value Type Description List < WeaponBase > characterName Declaration public string characterName Field Value Type Description String containerBorders Declaration public Vector4 containerBorders Field Value Type Description Vector4 headerBorders Declaration public Vector4 headerBorders Field Value Type Description Vector4 health Declaration public int health Field Value Type Description Int32 highlight Declaration public Action<string> highlight Field Value Type Description Action < String > inspectorElements Declaration public List<VisualElement> inspectorElements Field Value Type Description List < VisualElement > isNPC Declaration public bool isNPC Field Value Type Description Boolean lives Declaration public int lives Field Value Type Description Int32 location Declaration public string location Field Value Type Description String mana Declaration public int mana Field Value Type Description Int32 playerModel Declaration public GameObject playerModel Field Value Type Description GameObject showHat Declaration public bool showHat Field Value Type Description Boolean spawnLocation Declaration public Vector3 spawnLocation Field Value Type Description Vector3 Methods HighLightComponent(String) Declaration public void HighLightComponent(string componentTarget) Parameters Type Name Description String componentTarget"
  },
  "api/instance.id.EATK.Examples.html": {
    "href": "api/instance.id.EATK.Examples.html",
    "title": "Namespace instance.id.EATK.Examples | Element Animation Toolkit",
    "keywords": "Namespace instance.id.EATK.Examples Classes Axe ExampleComponent SecondComponent Sword WeaponBase"
  },
  "api/instance.id.EATK.Examples.SecondComponent.html": {
    "href": "api/instance.id.EATK.Examples.SecondComponent.html",
    "title": "Class SecondComponent | Element Animation Toolkit",
    "keywords": "Class SecondComponent Inheritance Object SecondComponent Namespace : instance.id.EATK.Examples Assembly : cs.temp.dll.dll Syntax [Serializable] public class SecondComponent : MonoBehaviour Fields availableWeapons Declaration public List<WeaponBase> availableWeapons Field Value Type Description List < WeaponBase > characterName Declaration public string characterName Field Value Type Description String containerBorders Declaration public Vector4 containerBorders Field Value Type Description Vector4 headerBorders Declaration public Vector4 headerBorders Field Value Type Description Vector4 health Declaration public int health Field Value Type Description Int32 highlight Declaration public Action<string> highlight Field Value Type Description Action < String > inspectorElements Declaration public List<VisualElement> inspectorElements Field Value Type Description List < VisualElement > isNPC Declaration public bool isNPC Field Value Type Description Boolean lives Declaration public int lives Field Value Type Description Int32 location Declaration public string location Field Value Type Description String mana Declaration public int mana Field Value Type Description Int32 playerModel Declaration public GameObject playerModel Field Value Type Description GameObject showHat Declaration public bool showHat Field Value Type Description Boolean spawnLocation Declaration public Vector3 spawnLocation Field Value Type Description Vector3 Methods HighLightComponent(String) Declaration public void HighLightComponent(string componentTarget) Parameters Type Name Description String componentTarget"
  },
  "api/instance.id.EATK.Examples.Sword.html": {
    "href": "api/instance.id.EATK.Examples.Sword.html",
    "title": "Class Sword | Element Animation Toolkit",
    "keywords": "Class Sword Inheritance Object WeaponBase Sword Namespace : instance.id.EATK.Examples Assembly : cs.temp.dll.dll Syntax public class Sword : WeaponBase Fields Damage Declaration public int Damage Field Value Type Description Int32 Durability Declaration public int Durability Field Value Type Description Int32 icon Declaration public Texture2D icon Field Value Type Description Texture2D Weight Declaration public int Weight Field Value Type Description Int32"
  },
  "api/instance.id.EATK.Examples.WeaponBase.html": {
    "href": "api/instance.id.EATK.Examples.WeaponBase.html",
    "title": "Class WeaponBase | Element Animation Toolkit",
    "keywords": "Class WeaponBase Inheritance Object WeaponBase Axe Sword Namespace : instance.id.EATK.Examples Assembly : cs.temp.dll.dll Syntax public class WeaponBase : ScriptableObject"
  },
  "api/instance.id.EATK.Expander.html": {
    "href": "api/instance.id.EATK.Expander.html",
    "title": "Class Expander | Element Animation Toolkit",
    "keywords": "Class Expander Inheritance Object Expander Namespace : instance.id.EATK Assembly : cs.temp.dll.dll Syntax public class Expander : VisualElement Constructors Expander() Declaration public Expander() Fields AnimationStatus Declaration public Action<bool> AnimationStatus Field Value Type Description Action < Boolean > expandTrigger Declaration public Action expandTrigger Field Value Type Description Action shownItem Declaration public VisualElement shownItem Field Value Type Description VisualElement Properties animationTime Declaration public int animationTime { get; set; } Property Value Type Description Int32 IsAnimating Declaration public bool IsAnimating { get; set; } Property Value Type Description Boolean startExpanded Declaration public bool startExpanded { get; set; } Property Value Type Description Boolean Methods Activate() Trigger expansion or collapse of the expansion group Declaration public void Activate() Activate(Boolean) Manually trigger expansion or collapse of the expansion group via parameter Declaration public void Activate(bool value) Parameters Type Name Description Boolean value Expands on true, collapses on false AddToExpansionGroup(VisualElement) Add elements to expansion group. Elements that are added will be displayed when Expander is expanded, and hidden when collapsed. Declaration public void AddToExpansionGroup(VisualElement element) Parameters Type Name Description VisualElement element A single element or container which will be added to the expansion group TriggerExpanderResize(ChangeEvent<Boolean>) Declaration public void TriggerExpanderResize(ChangeEvent<bool> eventValue) Parameters Type Name Description ChangeEvent < Boolean > eventValue TriggerExpanderResize(Boolean) Trigger the expansion container to resize. Needed when child elements change size. Declaration public void TriggerExpanderResize(bool eventValue = true) Parameters Type Name Description Boolean eventValue Default is true, which will make the container resize. If false, container will animate closed TriggerGeometryChange(GeometryChangedEvent) Manually trigger the OnGeometryChangedEvent event. Declaration public void TriggerGeometryChange(GeometryChangedEvent eventValue) Parameters Type Name Description GeometryChangedEvent eventValue GeometryChangedEvent"
  },
  "api/instance.id.EATK.Extensions.ClassData-1.html": {
    "href": "api/instance.id.EATK.Extensions.ClassData-1.html",
    "title": "Class ClassData<T> | Element Animation Toolkit",
    "keywords": "Class ClassData<T> Inheritance Object ClassData<T> Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax [Serializable] public class ClassData<T> where T : Attribute, new() Type Parameters Name Description T Constructors ClassData(Type) Declaration public ClassData(Type type) Parameters Type Name Description Type type Fields fieldDatas Declaration public Dictionary<string, FieldData<T>> fieldDatas Field Value Type Description Dictionary < String , FieldData <T>> fieldList Declaration public List<T> fieldList Field Value Type Description List <T> typeName Declaration public string typeName Field Value Type Description String"
  },
  "api/instance.id.EATK.Extensions.ColorUtil.html": {
    "href": "api/instance.id.EATK.Extensions.ColorUtil.html",
    "title": "Class ColorUtil | Element Animation Toolkit",
    "keywords": "Class ColorUtil Inheritance Object ColorUtil Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax public static class ColorUtil Methods EnsureHex(String) Declaration public static string EnsureHex(this string color) Parameters Type Name Description String color Returns Type Description String FromHex(String) Converts a hexadecimal color string to a Unity RGBA Color value Declaration public static Color FromHex(this string color) Parameters Type Name Description String color The string parameter must be a hexadecimal string, can beginning with # Returns Type Description Color Returns a Unity Color parameter converted from a HTML/hexadecimal color string Remarks The string parameter must be a hexadecimal string beginning with # Examples var color = ColorUtil.FromHex(\"#CCCCCC\");"
  },
  "api/instance.id.EATK.Extensions.ContainerData.html": {
    "href": "api/instance.id.EATK.Extensions.ContainerData.html",
    "title": "Class ContainerData | Element Animation Toolkit",
    "keywords": "Class ContainerData Inheritance Object ContainerData Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax public class ContainerData Fields containerId Declaration public int containerId Field Value Type Description Int32 containerName Declaration public string containerName Field Value Type Description String containerType Declaration public ContainerStyle containerType Field Value Type Description ContainerStyle element Declaration public VisualElement element Field Value Type Description VisualElement order Declaration public int order Field Value Type Description Int32"
  },
  "api/instance.id.EATK.Extensions.ContainerDatas.html": {
    "href": "api/instance.id.EATK.Extensions.ContainerDatas.html",
    "title": "Struct ContainerDatas | Element Animation Toolkit",
    "keywords": "Struct ContainerDatas Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax public struct ContainerDatas Fields containerId Declaration public int containerId Field Value Type Description Int32 containerName Declaration public string containerName Field Value Type Description String containerType Declaration public ContainerStyle containerType Field Value Type Description ContainerStyle element Declaration public VisualElement element Field Value Type Description VisualElement order Declaration public int order Field Value Type Description Int32"
  },
  "api/instance.id.EATK.Extensions.ContainerStyle.html": {
    "href": "api/instance.id.EATK.Extensions.ContainerStyle.html",
    "title": "Enum ContainerStyle | Element Animation Toolkit",
    "keywords": "Enum ContainerStyle Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax public enum ContainerStyle Fields Name Description AnimatedFoldout Box Foldout"
  },
  "api/instance.id.EATK.Extensions.EditorFieldAttribute.html": {
    "href": "api/instance.id.EATK.Extensions.EditorFieldAttribute.html",
    "title": "Class EditorFieldAttribute | Element Animation Toolkit",
    "keywords": "Class EditorFieldAttribute Attribute providing easier creation of custom internal editor windows Inheritance Object EditorFieldAttribute Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax [Serializable] [AttributeUsage(AttributeTargets.Field)] public class EditorFieldAttribute : PropertyAttribute, IEquatable<EditorFieldAttribute> Constructors EditorFieldAttribute() Attribute providing easier creation of custom internal editor windows Declaration public EditorFieldAttribute() EditorFieldAttribute(String, ContainerStyle, String, Int32, Int32, String) Attribute providing easier creation of custom internal editor windows Declaration public EditorFieldAttribute(string Description = null, ContainerStyle ContainerType = ContainerStyle.AnimatedFoldout, string ContainerName = null, int ContainerId = -1, int Order = -1, string ToolTip = null) Parameters Type Name Description String Description ContainerStyle ContainerType String ContainerName Int32 ContainerId Int32 Order String ToolTip Fields container Declaration public ContainerData container Field Value Type Description ContainerData description Declaration public string description Field Value Type Description String element Declaration public VisualElement element Field Value Type Description VisualElement toolTip Declaration public string toolTip Field Value Type Description String Methods Equals(EditorFieldAttribute) Declaration public bool Equals(EditorFieldAttribute other) Parameters Type Name Description EditorFieldAttribute other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32"
  },
  "api/instance.id.EATK.Extensions.ElementGeneration.html": {
    "href": "api/instance.id.EATK.Extensions.ElementGeneration.html",
    "title": "Class ElementGeneration | Element Animation Toolkit",
    "keywords": "Class ElementGeneration Inheritance Object ElementGeneration Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax public static class ElementGeneration Methods GenerateElements<T>(T, Single, Single) Generate UIElements Editor Window Declaration public static VisualElement GenerateElements<T>(this T classData, float labelMinWidth, float marginLeft = 0F) Parameters Type Name Description T classData Single labelMinWidth Single marginLeft Returns Type Description VisualElement Type Parameters Name Description T"
  },
  "api/instance.id.EATK.Extensions.ExampleComponentEditor.html": {
    "href": "api/instance.id.EATK.Extensions.ExampleComponentEditor.html",
    "title": "Class ExampleComponentEditor | Element Animation Toolkit",
    "keywords": "Class ExampleComponentEditor Inheritance Object ExampleComponentEditor Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax public class ExampleComponentEditor : Editor Fields styleSheet Declaration public StyleSheet styleSheet Field Value Type Description StyleSheet Methods CreateInspectorGUI() Declaration public override VisualElement CreateInspectorGUI() Returns Type Description VisualElement"
  },
  "api/instance.id.EATK.Extensions.FieldData-1.html": {
    "href": "api/instance.id.EATK.Extensions.FieldData-1.html",
    "title": "Class FieldData<T> | Element Animation Toolkit",
    "keywords": "Class FieldData<T> Inheritance Object FieldData<T> Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax [Serializable] public class FieldData<T> where T : Attribute, new() Type Parameters Name Description T Constructors FieldData(FieldInfo) Declaration public FieldData(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Fields attributeData Declaration public T attributeData Field Value Type Description T fieldInfo Declaration public FieldInfo fieldInfo Field Value Type Description FieldInfo fieldType Declaration public Type fieldType Field Value Type Description Type fieldTypeParameters Declaration public List<Type> fieldTypeParameters Field Value Type Description List < Type > fieldTypeParametersString Declaration public List<string> fieldTypeParametersString Field Value Type Description List < String > fieldTypeString Declaration public string fieldTypeString Field Value Type Description String name Declaration public string name Field Value Type Description String"
  },
  "api/instance.id.EATK.Extensions.html": {
    "href": "api/instance.id.EATK.Extensions.html",
    "title": "Namespace instance.id.EATK.Extensions | Element Animation Toolkit",
    "keywords": "Namespace instance.id.EATK.Extensions Classes ClassData<T> ColorUtil ContainerData EditorFieldAttribute Attribute providing easier creation of custom internal editor windows ElementGeneration ExampleComponentEditor FieldData<T> JumpTarget Class containing data needed to perform the JumpToCode method from a VisualElement context menu. ReflectionExtensions Structs ContainerDatas VisualElementStyleStore Enums ContainerStyle JumpType Used to determine the proper AssetDatabase search string to locate the file in which to perform the JumpToCode() method."
  },
  "api/instance.id.EATK.Extensions.JumpTarget.html": {
    "href": "api/instance.id.EATK.Extensions.JumpTarget.html",
    "title": "Class JumpTarget | Element Animation Toolkit",
    "keywords": "Class JumpTarget Class containing data needed to perform the JumpToCode method from a VisualElement context menu. Inheritance Object JumpTarget Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax public class JumpTarget Properties ExternalLocator Deprecated: Used to mark if the locator is on a different line than the calling method Declaration public bool ExternalLocator { get; set; } Property Value Type Description Boolean JumpType Used to determine the proper AssetDatabase search string to locate the file in which to perform the JumpToCode() method. Declaration public JumpType JumpType { get; set; } Property Value Type Description JumpType Locator The line of code in which to jump to is found by locating the \"locator\" string. This is where in the code in which to jump Declaration public string Locator { get; set; } Property Value Type Description String MenuTitle The title of the context menu for the JumpToCode entry Declaration public string MenuTitle { get; set; } Property Value Type Description String"
  },
  "api/instance.id.EATK.Extensions.JumpType.html": {
    "href": "api/instance.id.EATK.Extensions.JumpType.html",
    "title": "Enum JumpType | Element Animation Toolkit",
    "keywords": "Enum JumpType Used to determine the proper AssetDatabase search string to locate the file in which to perform the JumpToCode() method. Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax public enum JumpType Fields Name Description Animation Element USS"
  },
  "api/instance.id.EATK.Extensions.ReflectionExtensions.html": {
    "href": "api/instance.id.EATK.Extensions.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | Element Animation Toolkit",
    "keywords": "Class ReflectionExtensions Inheritance Object ReflectionExtensions Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax public static class ReflectionExtensions Methods GetEditorAttributes<T>(Object, Boolean) Get attributes from a class Declaration public static ClassData<T> GetEditorAttributes<T>(this object obj, bool sortOutput = false) where T : Attribute, new() Parameters Type Name Description Object obj Boolean sortOutput Returns Type Description ClassData <T> Type Parameters Name Description T GetRealTypeName(Type, Boolean) Declaration public static string GetRealTypeName(this Type t, bool parameters = false) Parameters Type Name Description Type t Boolean parameters Returns Type Description String"
  },
  "api/instance.id.EATK.Extensions.VisualElementStyleStore.html": {
    "href": "api/instance.id.EATK.Extensions.VisualElementStyleStore.html",
    "title": "Struct VisualElementStyleStore | Element Animation Toolkit",
    "keywords": "Struct VisualElementStyleStore Namespace : instance.id.EATK.Extensions Assembly : cs.temp.dll.dll Syntax public struct VisualElementStyleStore Properties AlignContent Declaration public StyleInt AlignContent { get; set; } Property Value Type Description StyleInt AlignItems Declaration public StyleInt AlignItems { get; set; } Property Value Type Description StyleInt AlignSelf Declaration public StyleInt AlignSelf { get; set; } Property Value Type Description StyleInt BackgroundColor Declaration public StyleColor BackgroundColor { get; set; } Property Value Type Description StyleColor BackgroundImage Declaration public StyleBackground BackgroundImage { get; set; } Property Value Type Description StyleBackground BorderBottomColor Declaration public StyleColor BorderBottomColor { get; set; } Property Value Type Description StyleColor BorderBottomLeftRadius Declaration public StyleLength BorderBottomLeftRadius { get; set; } Property Value Type Description StyleLength BorderBottomRightRadius Declaration public StyleLength BorderBottomRightRadius { get; set; } Property Value Type Description StyleLength BorderBottomWidth Declaration public StyleFloat BorderBottomWidth { get; set; } Property Value Type Description StyleFloat BorderLeftColor Declaration public StyleColor BorderLeftColor { get; set; } Property Value Type Description StyleColor BorderLeftWidth Declaration public StyleFloat BorderLeftWidth { get; set; } Property Value Type Description StyleFloat BorderRightColor Declaration public StyleColor BorderRightColor { get; set; } Property Value Type Description StyleColor BorderRightWidth Declaration public StyleFloat BorderRightWidth { get; set; } Property Value Type Description StyleFloat BorderTopColor Declaration public StyleColor BorderTopColor { get; set; } Property Value Type Description StyleColor BorderTopLeftRadius Declaration public StyleLength BorderTopLeftRadius { get; set; } Property Value Type Description StyleLength BorderTopRightRadius Declaration public StyleLength BorderTopRightRadius { get; set; } Property Value Type Description StyleLength BorderTopWidth Declaration public StyleFloat BorderTopWidth { get; set; } Property Value Type Description StyleFloat Bottom Declaration public StyleLength Bottom { get; set; } Property Value Type Description StyleLength Color Declaration public StyleColor Color { get; set; } Property Value Type Description StyleColor Cursor Declaration public StyleCursor Cursor { get; set; } Property Value Type Description StyleCursor Display Declaration public StyleInt Display { get; set; } Property Value Type Description StyleInt FlexBasis Declaration public StyleLength FlexBasis { get; set; } Property Value Type Description StyleLength FlexDirection Declaration public StyleInt FlexDirection { get; set; } Property Value Type Description StyleInt FlexGrow Declaration public StyleFloat FlexGrow { get; set; } Property Value Type Description StyleFloat FlexShrink Declaration public StyleFloat FlexShrink { get; set; } Property Value Type Description StyleFloat FlexWrap Declaration public StyleInt FlexWrap { get; set; } Property Value Type Description StyleInt FontSize Declaration public StyleLength FontSize { get; set; } Property Value Type Description StyleLength Height Declaration public StyleLength Height { get; set; } Property Value Type Description StyleLength JustifyContent Declaration public StyleInt JustifyContent { get; set; } Property Value Type Description StyleInt Left Declaration public StyleLength Left { get; set; } Property Value Type Description StyleLength MarginBottom Declaration public StyleLength MarginBottom { get; set; } Property Value Type Description StyleLength MarginLeft Declaration public StyleLength MarginLeft { get; set; } Property Value Type Description StyleLength MarginRight Declaration public StyleLength MarginRight { get; set; } Property Value Type Description StyleLength MarginTop Declaration public StyleLength MarginTop { get; set; } Property Value Type Description StyleLength MaxHeight Declaration public StyleLength MaxHeight { get; set; } Property Value Type Description StyleLength MaxWidth Declaration public StyleLength MaxWidth { get; set; } Property Value Type Description StyleLength MinHeight Declaration public StyleLength MinHeight { get; set; } Property Value Type Description StyleLength MinWidth Declaration public StyleLength MinWidth { get; set; } Property Value Type Description StyleLength Opacity Declaration public StyleFloat Opacity { get; set; } Property Value Type Description StyleFloat Overflow Declaration public StyleInt Overflow { get; set; } Property Value Type Description StyleInt PaddingBottom Declaration public StyleLength PaddingBottom { get; set; } Property Value Type Description StyleLength PaddingLeft Declaration public StyleLength PaddingLeft { get; set; } Property Value Type Description StyleLength PaddingRight Declaration public StyleLength PaddingRight { get; set; } Property Value Type Description StyleLength PaddingTop Declaration public StyleLength PaddingTop { get; set; } Property Value Type Description StyleLength Position Declaration public StyleInt Position { get; set; } Property Value Type Description StyleInt Right Declaration public StyleLength Right { get; set; } Property Value Type Description StyleLength SourceName Declaration public string SourceName { get; set; } Property Value Type Description String Top Declaration public StyleLength Top { get; set; } Property Value Type Description StyleLength UnityBackgroundImageTintColor Declaration public StyleColor UnityBackgroundImageTintColor { get; set; } Property Value Type Description StyleColor UnityBackgroundScaleMode Declaration public StyleInt UnityBackgroundScaleMode { get; set; } Property Value Type Description StyleInt UnityFont Declaration public StyleFont UnityFont { get; set; } Property Value Type Description StyleFont UnityFontStyleAndWeight Declaration public StyleInt UnityFontStyleAndWeight { get; set; } Property Value Type Description StyleInt UnityOverflowClipBox Declaration public StyleInt UnityOverflowClipBox { get; set; } Property Value Type Description StyleInt UnitySliceBottom Declaration public StyleInt UnitySliceBottom { get; set; } Property Value Type Description StyleInt UnitySliceLeft Declaration public StyleInt UnitySliceLeft { get; set; } Property Value Type Description StyleInt UnitySliceRight Declaration public StyleInt UnitySliceRight { get; set; } Property Value Type Description StyleInt UnitySliceTop Declaration public StyleInt UnitySliceTop { get; set; } Property Value Type Description StyleInt UnityTextAlign Declaration public StyleInt UnityTextAlign { get; set; } Property Value Type Description StyleInt Visibility Declaration public StyleInt Visibility { get; set; } Property Value Type Description StyleInt WhiteSpace Declaration public StyleInt WhiteSpace { get; set; } Property Value Type Description StyleInt Width Declaration public StyleLength Width { get; set; } Property Value Type Description StyleLength"
  },
  "api/instance.id.EATK.html": {
    "href": "api/instance.id.EATK.html",
    "title": "Namespace instance.id.EATK | Element Animation Toolkit",
    "keywords": "Namespace instance.id.EATK Classes AnimatedItems AnimatedItems<TEventType> AnimatedItems<TEventType, T2EventType> CollectionExtension Easy A collection of easing curves to be used with ValueAnimations. Expander ObjectElementData"
  },
  "api/instance.id.EATK.ObjectElementData.html": {
    "href": "api/instance.id.EATK.ObjectElementData.html",
    "title": "Class ObjectElementData | Element Animation Toolkit",
    "keywords": "Class ObjectElementData Inheritance Object ObjectElementData Namespace : instance.id.EATK Assembly : cs.temp.dll.dll Syntax [Serializable] public class ObjectElementData Constructors ObjectElementData(UnityEngine.Object) Declaration public ObjectElementData(UnityEngine.Object obj) Parameters Type Name Description UnityEngine.Object obj Fields elementData Declaration public Dictionary<string, VisualElement> elementData Field Value Type Description Dictionary < String , VisualElement > objectName Declaration public string objectName Field Value Type Description String objectReference Declaration public UnityEngine.Object objectReference Field Value Type Description UnityEngine.Object objectType Declaration public Type objectType Field Value Type Description Type"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Element Animation Toolkit",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "ElementAnimationToolkit | Element Animation Toolkit",
    "keywords": "ElementAnimationToolkit A collection of Unity UIToolkit/UIElements chainable animation extension methods, premade animated elements, and examples. <!-- omit in toc --> ElementAnimationToolkit Recent Features or Changes Documentation Installation Install via OpenUPM Unity Package Manager Animations and Features Usage / Examples Background Color Fade-In Hover Border Pulse Fade-in sequence Recent Features or Changes New Animation types: Sequences ShowForDuration Base Annimations AnimateOpacityDelayed Documentation Note: UIElements Animations are listed as Experimental by Unity - API subject to change. Also, since Element Animation Toolkit is currently underactive development, it is possible for API changes in this library as well <!-- omit in toc --> The intent of this package is to help asset developers more easily create their own animation sequences via code. <!-- omit in toc --> Though, I have been adding some new \"ready to go\" UIElement types, such as the \"AnimatedFoldout\", which you just use as you would a a typical foldout comes animated with no additional coding, minus some exposed properties to adjust the animation to your liking. I do intend to add more of these as I go along. This package began simply as a small collection of helpers methods I created across my last few projects to make animating editor elements much easier and finally put into a single place. I continue to add to it as I go along but decided to put together several examples and wanted to share them. Installation Install via OpenUPM openupm add id.instance.elementanimationtoolkit Unity Package Manager github.com/instance-id/elementanimationtoolkit.git#upm Animations and Features (There are more, I just have not added them all yet) Animation types: Method Sequences: AnimCharacterSequence AnimFadeInSequence ShowForDuration Continuous: AnimBorderPulse Hover: HoverBorderPulse Base Annimations: AnimateBackgroundColor AnimateBorderColor AnimateColor AnimateImageTintColor AnimateOpacity AnimateOpacityDelayed AnimateWidth AnimateHeight Extensions/Helpers AutoToggleAfter ApplyPrivacyMask SetDisplay GetDisplay SetOpacity GetDisplay SetText OpenURL Usage / Examples: Examples: Tools > instance.id > Element Animation Toolkit Note: The code is pretty heavily excessively documented and currently most method summaries for extension methods have examples in them. Be sure to check the comments for additional details! Example: Method IDE summary for 'HoverColor()' /// <summary> /// Adds forecolor hover capability that will not be lost like CSS:hover when programatically setting background color /// </summary> /// <example> /// <code> /// var originalColor = GetColor.FromHex(\"#BABABA\"); /// var hoverColor = GetColor.FromHex(\"#2F569C\"); /// /// label.HoverColor(originalColor, hoverColor); /// </code> /// </example> There are several fairly basic base animation helper methods which can easily be used on their own, but are also the basis of the more complex animation sequences: Background Color Fade-In (The initial fade from gray to blue) Example animation base helper: AnimateBackgroundColor() Usage: Color originalColor = GetColor.FromHex(\"#BABABA\"); Color fadeColor = GetColor.FromHex(\"#2F569C\"); var durationOfFade = 250; // In milliseconds VisualElement visualElement = new VisualElement(); visualElement.AnimateBackgroundColor(originalColor, fadeColor, durationOfFade); Hover Border Pulse Example hover animation: HoverBorderPulse() Usage: VisualElement visualElement = new VisualElement(); visualElement.HoverBorderPulse(pulseStartColor: GetColor.FromHex(\"#7F3B3A\"), pulseEndColor: GetColor.FromHex(\"#2F569C\"), colorDuration: 500); Fade-in sequence Example complex animation sequence: AnimFadeInSequence() Usage: Label label = new Label {text = \"Click button to make me fade!\"}; const int fadeInTime = 500; const float displayTime = 2000f; const int fadeOutTime = 500; string newText = \"then back to the original!\"; var originalTextColor = GetColor.FromHex(\"#BABABA\"); var animatedTextColor = GetColor.FromHex(\"#607FAE\"); label.AnimFadeInSequence(newText, animatedTextColor, originalTextColor, fadeInTime, displayTime, fadeOutTime); Then, of course, there is everything in between. Additionally there are many helper methods relating to many different Types from Color to opening weblinks in the browser. Example color helper method: GetColor.FromHex() Usage: Color color = GetColor.FromHex(\"#CCCCCC\"); Implementation: public static Color FromHex(this string color) { if (!color.StartsWith(\"#\")) Debug.LogWarning(\"The FromHex() function must be used on a hexadecimal string beginning with #\"); ColorUtility.TryParseHtmlString(color, out var outColor); return outColor; } Example creating an external url link : OpenURL() Usage: VisualElement visualElement = new VisualElement(); visualElement.OpenURL(\"https://github.com/instance-id/ElementAnimationToolkit\"); Implementation: public static T OpenURL<T>(this T element, string url) where T : VisualElement { element.RegisterCallback<MouseUpEvent>(evt => { if (evt.button == 0) { Application.OpenURL(url); evt.StopPropagation(); } }); return element; } Important files: Assets/instance.id/ElementAnimationToolkit/Editor/EATKEditor.cs This file is the primary example and demonstrative reference for most major features and is the main editor window of the package where you can view examples of several different types of animations and their usage. You can access the main editor window via Tools > instance.id > Element Animation Toolkit There are three buttons per row, Editor, Anim, and USS. The editor button will take you directly to the editor code specific to that element where you will see the C# implementation of UIElements as well as most callback registrations. The Anim button takes you to another section of the file in which you can see the declaration, setup, and execution of any animation specific functions, Lastly is the USS button, which takes you to the USS stylesheet and the location of the particular animation if you need. The animations without a row of buttons have a right-click context menu implemented which has similar options to jump directly into the code at the proper location for the animation. (The methods I have created for jumping straight to the proper lines of code are of course included and you are welcome to take advantage of them for your own needs.)"
  }
}